// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Platform {
  X
  LINKEDIN
}

model User {
  id             String   @id @default(uuid())
  platform       Platform
  platformUserId String
  username       String

  tags      UserTag[]
  followers Follow[]  @relation("UserFollowers")
  following Follow[]  @relation("UserFollowing")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([platform, platformUserId])
  @@unique([platform, username])
}

model Follow {
  id          String @id @default(uuid())
  followerId  String
  follower    User   @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  followingId String
  following   User   @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([followerId, followingId])
}

model Tag {
  id    String    @id @default(uuid())
  name  String    @unique
  users UserTag[]
}

model UserTag {
  userId String
  user   User   @relation(fields: [userId], references: [id])

  tagId String
  tag   Tag    @relation(fields: [tagId], references: [id])

  assignedAt DateTime @default(now())

  @@id([userId, tagId])
}
